providers:
    sdk:
        provider: Sdk
        platform: sitewalker
        issues: https://api.github.com/repos/corley/jupcloo-site-walker/issues
    commits:
        provider: Commit
        api: https://api.github.com/repos/corley/jupcloo-site-walker/commits
        repo: https://github.com/corley/jupcloo-site-walker
---
<div class="content">
    <div class="row">
        <div class="span12">
            <h1>UpCloo Remote Importer</h1>
            <p class="lead">
             	UpCloo remote importer is the UpCloo simple crawler that get
				your contents for create the initial index.
            </p>
        </div>
        <div class="span6">
            <h2>Issues list</h2>
            {% include '/../issues.twig' %}
        </div>
        <div class="span6">
            <h2>Latest Updates</h2>
            {% include '/../commits.twig' %}
        </div>
        {% include '/../github.twig' %}
    </div>
    <section id="remote-importer">
        <div class="row">
            <div class="span12">
                <h2>Enable remote importer</h2>
                <p>
                    At first time UpCloo have to move your contents into the 
                    Corley Cloud system. For that reason you have to enable 
                    the meta tag exposure system that show into your public 
                    HTML page sensible information of your posts. In that way 
                    the UpCloo spider can read information and import your 
                    contents without any connection with your internal structure.
                </p>
            </div>
            <div class="span12">
                <h3>Tag exposed</h3>
                <p>
                    UpCloo expose, if you enable it, a list of information
                    that enable remote UpCloo daemons to crawl your website
                    and get useful information for index generation.
                </p>
                <p>Minimal requirement:</p>
                <pre class="prettyprint linenums">
&lt;!-- UPCLOO_POST_ID post_1088 UPCLOO_POST_ID --&gt;
&lt;!-- UPCLOO_POST_TITLE Zend\Di impressioni - ZF2 UPCLOO_POST_TITLE --&gt;</pre>
                <p>
                    A complex example:
                </p>
                <pre class="prettyprint linenums">
&lt;!-- UPCLOO_POST_ID post_1088 UPCLOO_POST_ID --&gt;
&lt;!-- UPCLOO_POST_TYPE post UPCLOO_POST_TYPE --&gt;
&lt;!-- UPCLOO_POST_TITLE Zend\Di impressioni - ZF2 UPCLOO_POST_TITLE --&gt;
&lt;!-- UPCLOO_POST_PUBLISH_DATE 2012-01-08T15:25:42Z UPCLOO_POST_PUBLISH_DATE --&gt;
&lt;!-- UPCLOO_POST_AUTHOR Walter Dal Mut UPCLOO_POST_AUTHOR --&gt;
&lt;!-- UPCLOO_POST_DYNAMIC_TAG_LIST me,you UPCLOO_POST_DYNAMIC_TAG_LIST --&gt;
&lt;!-- UPCLOO_POST_DYNAMIC_TAG_ME one, two UPCLOO_POST_DYNAMIC_TAG_ME --&gt;
&lt;!-- UPCLOO_POST_DYNAMIC_TAG_YOU one, two UPCLOO_POST_DYNAMIC_TAG_YOU --&gt;  
&lt;!-- UPCLOO_POST_TAGS Dependency Injection,DiC,php,zend,Zend\Di,Zend_Di,zf2 UPCLOO_POST_TAGS --&gt;
&lt;!-- UPCLOO_POST_CATEGORIES Applicazioni,PHP,Tests UPCLOO_POST_CATEGORIES --&gt;</pre>
                <p>
                    The content body is the only marker that wrap a portion of a text
                    between two HTML comments. It mark the content starts and the content
                    ends. See the example:
                </p>
                <pre class="prettyprint linenums">
&lt;!-- UPCLOO_POST_CONTENT --&gt;Your body with HTML and other stuffs&lt;!-- UPCLOO_POST_CONTENT --&gt;</pre>
                <p>
                    List of basic fields that you can mark:
                </p>
                <ul>
                    <li>id - MANDATORY - the unique content identification string.</li>
                    <li>type - OPTIONAL - the type of this content (useful for searches).</li>
                    <li>title - OPTIONAL - the content title.</li>
                    <li>publish date - OPTIONAL - the content publish date.</li>
                    <li>author - OPTIONAL - the content author/authors (comma separated).</li>
                    <li>image - OPTIONAL - the link of image, if missing the first image in the content body will be used.</li>
                    <li>tags - OPTIONAL - comma separated list of content tags.</li>
                    <li>categories - OPTIONAL - comma separated list of content categories.</li>
                </ul>
                <p>
                    Dynamic tag fields use a different structure, it has a base line that
                    indicates names for tag specification. For example if you want to create
                    a dynamic tag with name <code>agency</code> you have to do:
                </p>
                <pre class="prettyprint linenums">
&lt;!-- UPCLOO_POST_DYNAMIC_TAG_LIST agency UPCLOO_POST_DYNAMIC_TAG_LIST --&gt;
&lt;!-- UPCLOO_POST_DYNAMIC_TAG_AGENCY intel, apple, samsung UPCLOO_POST_DYNAMIC_TAG_AGENCY --&gt;</pre>
            </div>
        </div>
    </section>
</div>
