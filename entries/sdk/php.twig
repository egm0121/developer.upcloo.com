providers:
    sdk:
        provider: Sdk
        platform: php
        issues: https://api.github.com/repos/corley/upcloo-php-sdk/issues
    commits:
        provider: Commit
        api: https://api.github.com/repos/corley/upcloo-php-sdk/commits
        repo: https://github.com/corley/upcloo-php-sdk
---
<div class="content">
    <section>
        <div class="row">
            <div class="span12">
                <h1>UpCloo PHP SDK</h1>
                <p>&nbsp;</p>
            </div>
            <div class="span6">
                <h2>Issues list</h2>
                {% include 'issues.twig' %}
            </div>
            <div class="span6">
                <h2>Latest Updates</h2>
                {% include 'commits.twig' %}
            </div>
            {% include 'github.twig' %}
            <div class="span12">
                <p>Now you are ready to use UpCloo PHP SDK.</p>
            </div>
        </div>
    </section>
    <section class="sdk-sep">
        <div class="row">
            <div class="span12">
                <h2>Setting up your credentials</h2>
                <p>
                    UpCloo SDKs is designed on Singleton pattern, for
                    more information around that design <a href="http://en.wikipedia.org/wiki/Singleton_pattern">see on wiki</a>. 
                </p>
                <pre class="prettyprint linenums">
$manager = UpCloo_Manager::getInstance();</pre>
                <p>
                    The <code>$manager</code> variable contains a valid
                    UpCloo instance.
                </p>
                <h2>Send new contents to the Cloud</h2>
                <p>
                    UpCloo SDK handle inserts and updates by it self.
                    You have only to request the content indexing. See on
                    an example.
                </p>
                <pre class="prettyprint linenums">
$response = $manager->index(
    array(
        'id' => '1234',
        'title' => 'My content title'
    )
);</pre>
                <p>
                    The only mandatory element in a valid index
                    request is the <code>id</code> field. But 
                    using also other fields is highly recommended.
                    Tipically using <code>title</code>, <code>summary</code>
                    is a good choice.
                </p>
            </div>
            <div class="span12">
                <p>
                    UpCloo works using a cloud based NOSQL database and for that
                    reason you can indexing a moltitude of fields, a fixed structure 
                    is already design by our team for simplify your life and the 
                    full list of fixed tags is here:
                </p>
            </div>
            <div class="span6">
                <ul>
                    <li><code>id</code>
                        <ul>
                            <li>Identification number</li>
                            <li>
                                ID must be unique into your sitekey and is typed as a 
                                fully qualified string.
                            </li>
                        </ul>
                    </li>
                    <li><code>title</code>
                        <ul>
                            <li>The content title</li>
                            <li>
                                Tipically a title is a short text but no 
                                limit are imposed.
                            </li>
                        </ul>
                    </li>
                    <li>
                        <code>summary</code>
                        <ul>
                            <li>A short version of content</li>
                        </ul>
                    </li>
                    <li>
                        <code>content</code>
                        <ul>
                            <li>The body of your article/post etc.</li>
                        </ul>
                    </li>
                    <li>
                        <code>tag</code>
                        <ul>
                            <li>A list of marker for this content</li>
                        </ul>
                    </li>
                    <li>
                        <code>category</code>
                        <ul>
                            <li>A list of categories for this content</li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="span6">
                <p>
                    Dynamic Tags is a good feature for store your
                    personalized structure. Consider to use this flexible
                    part for sending your data and don't use other fields
                    instead.
                </p>
                <p>
                    Only five type of dynamic tags are available at this 
                    time:
                </p>
                <ul>
                    <li><code>text</code> textual field</li>
                    <li><code>date</code> date (ISO8601)</li>
                    <li><code>int</code> integer number</li>
                    <li><code>decimal</code> floating point number</li>
                    <li><code>date</code> date and time (ISO8601)</li>
                </ul>
            </div>
            <div class="span12">
                <h2>Retrive indexed contents</h2>
                <p>
                    After a content indexing you can retrive it's correlation
                    using a <code>get</code> dedicated method.
                </p>
                <pre class="prettyprint linenums">
$correlations = $manager->get("content-id");</pre>
                <p>
                    Retriving relations is very simple, you send the content
                    identification string and retrive the contents list.
                    UpCloo choose the best for you.
                </p>
            </div>
        </div>
    </section>
</div>